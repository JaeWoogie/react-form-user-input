{"ast":null,"code":"var _jsxFileName = \"/Users/Jae/Desktop/ReactProject/react-form-user-input/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  // const [emailFormat, setemailFormat] = useState(false);\n\n  const [enteredEmail, setenteredEmail] = useState('');\n  const [enteredEmailTouched, setenteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  const isValidEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n  if (entere) if (enteredNameIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangeHandler = event => {\n    setenteredEmail(event.target.value);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setenteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    console.log(enteredEmail);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setenteredEmail('');\n    setenteredEmailTouched(false);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setenteredEmailTouched(true);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailInputChangeHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"32M/JCpOvXv91BhVWq2G5VX6uAI=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setenteredEmail","enteredEmailTouched","setenteredEmailTouched","enteredNameIsValid","trim","enteredEmailIsValid","nameInputIsInvalid","emailInputIsInvalid","formIsValid","isValidEmail","entere","nameInputChangeHandler","event","target","value","emailInputChangeHandler","formSubmissionHandler","preventDefault","console","log","nameInputBlurHandler","emailInputBlurHandler","nameInputClasses","emailInputClasses"],"sources":["/Users/Jae/Desktop/ReactProject/react-form-user-input/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  // const [emailFormat, setemailFormat] = useState(false);\n\n  const [enteredEmail, setenteredEmail] = useState('');\n  const [enteredEmailTouched, setenteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  const isValidEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\n  if(entere)\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setenteredEmail(event.target.value);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n    setenteredEmailTouched(true);\n\n    if(!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName)\n    console.log(enteredEmail)\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setenteredEmail('');\n    setenteredEmailTouched(false);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  }\n\n  const emailInputBlurHandler = (event) => {\n    setenteredEmailTouched(true);\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} onBlur={nameInputBlurHandler}/>\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>Email</label>\n        <input type='text' id='name' onChange={emailInputChangeHandler} value={enteredEmail} onBlur={emailInputBlurHandler}/>\n        {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}